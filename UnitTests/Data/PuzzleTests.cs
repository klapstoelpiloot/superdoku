using Superdoku.Data;
using Superdoku.IO;
using System.Text;

namespace UnitTests.Data
{
    [TestFixture]
    public class PuzzleTests : TestBase
    {
        [TestCase("....45.........1..3.......7...........2................8.......9..............3..", 4, 0, 0, false)]
        [TestCase("....45.........1..3.......7...........2................8.......9..............3..", 2, 0, 0, true)]
        [TestCase("....45.........1..3.......7...........2................8.......9..............3..", 3, 0, 0, false)]
        [TestCase("....45.........1..3.......7...........2................8.......9..............3..", 9, 0, 0, false)]
        [TestCase("....45.........1..3.......7...........2................8.......9..............3..", 9, 1, 0, true)]
        [TestCase("....45.........1..3.......7...........2................8.......9..............3..", 8, 1, 0, false)]
		[TestCase("....45.........1..3.......7...........2................8.......9..............3..", 4, 1, 0, false)]
		[TestCase("....45.........1..3.......7...........2................8.......9..............3..", 5, 1, 0, false)]
		[TestCase("....45.........1..3.......7...........2................8.......9..............3..", 3, 1, 0, false)]
		[TestCase("....45.........1..3.......7...........2................8.......9..............3..", 2, 2, 0, false)]
		[TestCase("....45.........1..3.......7...........2................8.......9..............3..", 5, 2, 0, false)]
		[TestCase("....45.........1..3.......7...........2................8.......9..............3..", 1, 2, 0, true)]
		[TestCase("....45.........1..3.......7...........2................8.......9..............3..", 3, 2, 0, false)]
		[TestCase("....45.........1..3.......7...........2................8.......9..............3..", 1, 0, 1, false)]
		[TestCase("....45.........1..3.......7...........2................8.......9..............3..", 9, 0, 1, false)]
		[TestCase("....45.........1..3.......7...........2................8.......9..............3..", 8, 0, 1, true)]
		[TestCase("....45.........1..3.......7...........2................8.......9..............3..", 3, 0, 1, false)]
		[TestCase("....45.........1..3.......7...........2................8.......9..............3..", 3, 1, 1, false)]
		[TestCase("....45.........1..3.......7...........2................8.......9..............3..", 1, 1, 1, false)]
		[TestCase("....45.........1..3.......7...........2................8.......9..............3..", 8, 1, 1, false)]
		[TestCase("....45.........1..3.......7...........2................8.......9..............3..", 2, 1, 1, true)]
		[TestCase("....45.........1..3.......7...........2................8.......9..............3..", 3, 2, 1, false)]
		[TestCase("....45.........1..3.......7...........2................8.......9..............3..", 1, 2, 1, false)]
		[TestCase("....45.........1..3.......7...........2................8.......9..............3..", 2, 2, 1, false)]
		[TestCase("....45.........1..3.......7...........2................8.......9..............3..", 6, 2, 1, true)]
		[TestCase("....45.........1..3.......7...........2................8.......9..............3..", 3, 1, 2, false)]
		[TestCase("....45.........1..3.......7...........2................8.......9..............3..", 8, 1, 2, false)]
		[TestCase("....45.........1..3.......7...........2................8.......9..............3..", 7, 1, 2, false)]
		[TestCase("....45.........1..3.......7...........2................8.......9..............3..", 4, 1, 2, true)]
		[TestCase("....45.........1..3.......7...........2................8.......9..............3..", 3, 2, 2, false)]
		[TestCase("....45.........1..3.......7...........2................8.......9..............3..", 2, 2, 2, false)]
		[TestCase("....45.........1..3.......7...........2................8.......9..............3..", 7, 2, 2, false)]
		[TestCase("....45.........1..3.......7...........2................8.......9..............3..", 8, 2, 2, true)]
		[TestCase("....45.........1..3.......7...........2................8.......9..............3..", 8, 3, 2, true)]
		[TestCase("....45.........1..3.......7...........2................8.......9..............3..", 3, 3, 2, false)]
		[TestCase("....45.........1..3.......7...........2................8.......9..............3..", 4, 3, 2, false)]
		[TestCase("....45.........1..3.......7...........2................8.......9..............3..", 5, 3, 2, false)]
		[TestCase("....45.........1..3.......7...........2................8.......9..............3..", 7, 3, 2, false)]
		[TestCase("....45.........1..3.......7...........2................8.......9..............3..", 2, 3, 2, true)]
		[TestCase("....45.........1..3.......7...........2................8.......9..............3..", 1, 6, 6, false)]
		[TestCase("....45.........1..3.......7...........2................8.......9..............3..", 2, 6, 6, true)]
		[TestCase("....45.........1..3.......7...........2................8.......9..............3..", 3, 6, 6, false)]
		[TestCase("....45.........1..3.......7...........2................8.......9..............3..", 8, 6, 6, false)]
		[TestCase("....45.........1..3.......7...........2................8.......9..............3..", 3, 7, 6, false)]
		[TestCase("....45.........1..3.......7...........2................8.......9..............3..", 8, 7, 6, false)]
		[TestCase("....45.........1..3.......7...........2................8.......9..............3..", 6, 7, 6, true)]
		[TestCase("....45.........1..3.......7...........2................8.......9..............3..", 7, 8, 6, false)]
		[TestCase("....45.........1..3.......7...........2................8.......9..............3..", 3, 8, 6, false)]
		[TestCase("....45.........1..3.......7...........2................8.......9..............3..", 8, 8, 6, false)]
		[TestCase("....45.........1..3.......7...........2................8.......9..............3..", 2, 8, 6, true)]
		[TestCase("....45.........1..3.......7...........2................8.......9..............3..", 9, 6, 7, false)]
		[TestCase("....45.........1..3.......7...........2................8.......9..............3..", 1, 6, 7, false)]
		[TestCase("....45.........1..3.......7...........2................8.......9..............3..", 3, 6, 7, false)]
		[TestCase("....45.........1..3.......7...........2................8.......9..............3..", 6, 6, 7, true)]
		[TestCase("....45.........1..3.......7...........2................8.......9..............3..", 9, 7, 7, false)]
		[TestCase("....45.........1..3.......7...........2................8.......9..............3..", 3, 7, 7, false)]
		[TestCase("....45.........1..3.......7...........2................8.......9..............3..", 2, 7, 7, true)]
		[TestCase("....45.........1..3.......7...........2................8.......9..............3..", 7, 8, 7, false)]
		[TestCase("....45.........1..3.......7...........2................8.......9..............3..", 9, 8, 7, false)]
		[TestCase("....45.........1..3.......7...........2................8.......9..............3..", 3, 8, 7, false)]
		[TestCase("....45.........1..3.......7...........2................8.......9..............3..", 6, 8, 7, true)]
		[TestCase("....45.........1..3.......7...........2................8.......9..............3..", 3, 7, 8, false)]
		[TestCase("....45.........1..3.......7...........2................8.......9..............3..", 2, 7, 8, true)]
		[TestCase("....45.........1..3.......7...........2................8.......9..............3..", 3, 8, 8, false)]
		[TestCase("....45.........1..3.......7...........2................8.......9..............3..", 7, 8, 8, false)]
		[TestCase("....45.........1..3.......7...........2................8.......9..............3..", 2, 8, 8, true)]
        public void TestCheckConstraints(string puzzlestr, int v, int x, int y, bool expected)
        {
            MemoryStream stream = new MemoryStream(Encoding.ASCII.GetBytes(puzzlestr));
            Puzzle p = PuzzleFileReader.Read(stream);
            bool result = p.CheckConstraints(v, x, y);
            Assert.That(result, Is.EqualTo(expected));
        }
    }
}
